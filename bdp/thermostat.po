THEORY ProofList IS
_f(1) & _f(2) & _f(3) & _f(18) & _f(5) & WellDefinedness_getAvgTemp.8,(_f(39) & _f(57) => _f(72));
_f(1) & _f(2) & _f(3) & _f(18) & _f(5) & WellDefinedness_getAvgTemp.7,(_f(39) & _f(57) => _f(58));
_f(1) & _f(2) & _f(3) & _f(18) & _f(5) & WellDefinedness_getAvgTemp.6,(_f(39) & _f(69) & _f(57) => _f(71));
_f(1) & _f(2) & _f(3) & _f(18) & _f(5) & WellDefinedness_getAvgTemp.5,(_f(39) & _f(57) => _f(70));
_f(1) & _f(2) & _f(3) & _f(18) & _f(5) & WellDefinedness_getAvgTemp.4,(_f(57) => _f(72));
_f(1) & _f(2) & _f(3) & _f(18) & _f(5) & WellDefinedness_getAvgTemp.3,(_f(57) => _f(58));
_f(1) & _f(2) & _f(3) & _f(18) & _f(5) & WellDefinedness_getAvgTemp.2,(_f(69) & _f(57) => _f(71));
_f(1) & _f(2) & _f(3) & _f(18) & _f(5) & WellDefinedness_getAvgTemp.1,(_f(57) => _f(70));
_f(1) & _f(2) & _f(3) & _f(18) & _f(5) & WellDefinedness_getMaxTemp.2,(_f(57) => _f(68));
_f(1) & _f(2) & _f(3) & _f(18) & _f(5) & WellDefinedness_getMaxTemp.1,(_f(57) => _f(66));
_f(1) & _f(2) & _f(3) & _f(18) & _f(5) & WellDefinedness_getMinTemp.2,(_f(57) => _f(67));
_f(1) & _f(2) & _f(3) & _f(18) & _f(5) & WellDefinedness_getMinTemp.1,(_f(57) => _f(66));
_f(1) & _f(2) & _f(3) & _f(18) & _f(19) & WellDefinedness_addTemp.3,(_f(21) & _f(22) & _f(23) & _f(24) & _f(25) & _f(57) => _f(65));
_f(1) & _f(2) & _f(3) & _f(18) & _f(19) & WellDefinedness_addTemp.2,(_f(21) & _f(22) & _f(23) & _f(24) & _f(57) => _f(65));
_f(1) & _f(2) & _f(3) & _f(18) & _f(19) & WellDefinedness_addTemp.1,(_f(21) & _f(22) & _f(57) => _f(64));
_f(1) & _f(2) & _f(3) & _f(4) & WellDefinednessAssertions.1,(_f(57) => _f(58));
_f(1) & _f(2) & _f(3) & _f(18) & _f(4) & init.1,(_f(14) & _f(13) & _f(12) & _f(15) & _f(16) => _f(17));
_f(1) & _f(2) & _f(3) & _f(18) & _f(5) & getAvgTemp.4,(_f(39) & _f(9) & _f(29) & _f(15) => _f(33));
_f(1) & _f(2) & _f(3) & _f(18) & _f(5) & getAvgTemp.3,(_f(39) & _f(9) & _f(29) & _f(15) => _f(34));
_f(1) & _f(2) & _f(3) & _f(18) & _f(5) & getAvgTemp.2,(_f(39) & _f(9) & _f(29) & _f(15) => _f(38));
_f(1) & _f(2) & _f(3) & _f(18) & _f(5) & getAvgTemp.1,(_f(39) & _f(9) & _f(15) & _f(40) => _f(12));
_f(1) & _f(2) & _f(3) & _f(18) & _f(5) & getMaxTemp.4,(_f(29) & _f(15) => _f(35));
_f(1) & _f(2) & _f(3) & _f(18) & _f(5) & getMaxTemp.3,(_f(29) & _f(15) => _f(33));
_f(1) & _f(2) & _f(3) & _f(18) & _f(5) & getMaxTemp.2,(_f(29) & _f(15) => _f(38));
_f(1) & _f(2) & _f(3) & _f(18) & _f(5) & getMaxTemp.1,(_f(15) & _f(36) => _f(37));
_f(1) & _f(2) & _f(3) & _f(18) & _f(5) & getMinTemp.4,(_f(29) & _f(15) => _f(35));
_f(1) & _f(2) & _f(3) & _f(18) & _f(5) & getMinTemp.3,(_f(29) & _f(15) => _f(34));
_f(1) & _f(2) & _f(3) & _f(18) & _f(5) & getMinTemp.2,(_f(29) & _f(15) => _f(33));
_f(1) & _f(2) & _f(3) & _f(18) & _f(5) & getMinTemp.1,(_f(15) & _f(31) => _f(32));
_f(1) & _f(2) & Initialisation.1,(_f(14) & _f(13) & _f(12) & _f(15) & _f(16) => _f(17));
_f(1) & _f(2) & _f(3) & _f(4) & AssertionLemmas.3,(_f(5) & _f(6) => _f(9));
_f(1) & _f(2) & _f(3) & _f(4) & AssertionLemmas.2,(_f(6) => _f(8));
_f(1) & _f(2) & _f(3) & _f(4) & AssertionLemmas.1,(_f(6) => _f(7))
END
&
THEORY Formulas IS
((NAT) = (((0) .. (2147483647)))) & ((INT) = (((-2147483647) .. (2147483647))));
((TEMPS_CAPACITY) : (((100) .. (100)))) & ((TEMPS_CAPACITY) = (100));
((temps) : (((((1) .. (TEMPS_CAPACITY))) +-> (((-50) .. (120)))))) & ((minTemp) : (((-50) .. (120)))) & ((maxTemp) : (((-50) .. (120)))) & ((avgTemp) : (((-50) .. (120)))) & ((isMinComputed) : (BOOL)) & ((isMaxComputed) : (BOOL)) & ((isAvgComputed) : (BOOL)) & ((((temps) = ({}))) => (((isMinComputed) = (FALSE)) & ((isMaxComputed) = (FALSE)) & ((isAvgComputed) = (FALSE)))) & ((((isMinComputed) = (TRUE))) => (((minTemp) = (min(ran(temps)))))) & ((((isMaxComputed) = (TRUE))) => (((maxTemp) = (max(ran(temps)))))) & ((((isAvgComputed) = (TRUE))) => (((avgTemp) = ((SIGMA(xx).(((xx) : (dom(temps))) | (temps )(xx)) / card(dom(temps)))))));
btrue;
not(temps = {});
"Assertion is verified";
((dom(temps)) = (((1) .. (card(dom(temps))))));
((temps) : (FIN(temps)));
(((SIGMA(xx).(((xx) : (dom(temps))) | (temps )(xx)) / card(dom(temps)))) : (((-50) .. (120))));
(({}) = ({}));
((FALSE) = (TRUE));
((avgTemp$1) : (((-50) .. (120))));
((maxTemp$1) : (((-50) .. (120))));
((minTemp$1) : (((-50) .. (120))));
"Invariant is preserved";
"Check invariant ((temps) : (((((1) .. (TEMPS_CAPACITY))) +-> (((-50) .. (120))))))";
(({}) : (((((1) .. (TEMPS_CAPACITY))) +-> (((-50) .. (120))))));
((dom(temps)) = (((1) .. (card(dom(temps)))))) & ((temps) : (FIN(temps))) & ((not(temps = {})) => ((((SIGMA(xx).(((xx) : (dom(temps))) | (temps )(xx)) / card(dom(temps)))) : (((-50) .. (120))))));
((newTemp) : (((-50) .. (120))));
((tTemps) = ({}));
((tTemps) : (((((1) .. (TEMPS_CAPACITY))) +-> (((-50) .. (120))))));
((1) : (dom(tTemps)));
(((tTemps )(1)) = (newTemp));
!(ii).(((((ii) : (((2) .. (min(({(card(dom(temps)) + 1)}\/{TEMPS_CAPACITY}))))))) => ((((tTemps )(ii)) = ((temps )((ii - 1)))))));
((dom(tTemps)) = (((1) .. (card(dom(tTemps))))));
(card(dom(tTemps)) <= TEMPS_CAPACITY);
(((card(dom(temps)) +1 <= TEMPS_CAPACITY)) => (((dom(tTemps)) = (((dom(temps)) \/ (({(card(dom(temps)) + 1)})))))));
((((card(dom(temps))) = (TEMPS_CAPACITY))) => (((dom(tTemps)) = (dom(temps)))));
((temps) = ({}));
((TRUE) = (TRUE));
"Check invariant ((minTemp) : (((-50) .. (120))))";
((min(ran(temps))) : (((-50) .. (120))));
((TRUE) = (FALSE));
((isMaxComputed) = (FALSE));
((isAvgComputed) = (FALSE));
"Check invariant ((maxTemp) : (((-50) .. (120))))";
((max(ran(temps))) : (((-50) .. (120))));
((isMinComputed) = (FALSE));
((avgTemp$1) = ((SIGMA(xx).(((xx) : (dom(temps))) | (temps )(xx)) / card(dom(temps)))));
"Check invariant ((avgTemp) : (((-50) .. (120))))";
((TEMPS_CAPACITY) : (((100) .. (100))));
((((temps) = ({}))) => (((((isMinComputed) = (FALSE))) => (((((isMaxComputed) = (FALSE))) => (btrue))))));
((((isMinComputed) = (TRUE))) => (not(((ran(temps)) = ({}))) & ((((ran(temps)) /\ ((INTEGER - NATURAL)))) : (FIN(INTEGER)))));
((((isMaxComputed) = (TRUE))) => (not(((ran(temps)) = ({}))) & ((((ran(temps)) /\ (NATURAL))) : (FIN(NATURAL)))));
((((isAvgComputed) = (TRUE))) => (((SET(xx).(((xx) : (dom(temps))))) : (FIN(SET(xx).(((xx) : (dom(temps))))))) & !(xx).(btrue) & !(xx).(((((xx) : (dom(temps)))) => (((xx) : (dom(temps))) & ((temps) : (((dom(temps)) +-> (ran(temps)))))))) & ((dom(temps)) : (FIN(dom(temps)))) & not(((card(dom(temps))) = (0)))));
((((isMaxComputed) = (TRUE))) => (((maxTemp) = (max(ran(temps))))));
((((isMinComputed) = (TRUE))) => (((minTemp) = (min(ran(temps))))));
((((temps) = ({}))) => (((isMinComputed) = (FALSE)) & ((isMaxComputed) = (FALSE)) & ((isAvgComputed) = (FALSE))));
((isAvgComputed) : (BOOL));
((isMaxComputed) : (BOOL));
((isMinComputed) : (BOOL));
((avgTemp) : (((-50) .. (120))));
((maxTemp) : (((-50) .. (120))));
((minTemp) : (((-50) .. (120))));
((temps) : (((((1) .. (TEMPS_CAPACITY))) +-> (((-50) .. (120))))));
((not(temps = {})) => (((SET(xx).(((xx) : (dom(temps))))) : (FIN(SET(xx).(((xx) : (dom(temps))))))) & !(xx).(btrue) & !(xx).(((((xx) : (dom(temps)))) => (((xx) : (dom(temps))) & ((temps) : (((dom(temps)) +-> (ran(temps)))))))) & ((dom(temps)) : (FIN(dom(temps)))) & not(((card(dom(temps))) = (0)))));
"Well definedness";
((dom(temps)) : (FIN(dom(temps))));
not(((({(card(dom(temps)) + 1)}\/{TEMPS_CAPACITY})) = ({})));
((((({(card(dom(temps)) + 1)}\/{TEMPS_CAPACITY})) /\ ((INTEGER - NATURAL)))) : (FIN(INTEGER)));
((((ii) : (((2) .. (min(({(card(dom(temps)) + 1)}\/{TEMPS_CAPACITY}))))))) => (((ii) : (dom(tTemps))) & ((tTemps) : (((dom(tTemps)) +-> (ran(tTemps))))) & (((ii - 1)) : (dom(temps))) & ((temps) : (((dom(temps)) +-> (ran(temps)))))));
(((card(dom(temps)) +1 <= TEMPS_CAPACITY)) => (((dom(temps)) : (FIN(dom(temps))))));
((((card(dom(temps))) = (TEMPS_CAPACITY))) => (btrue));
((tTemps) : (((dom(tTemps)) +-> (ran(tTemps)))));
((dom(tTemps)) : (FIN(dom(tTemps))));
not(((ran(temps)) = ({})));
((((ran(temps)) /\ ((INTEGER - NATURAL)))) : (FIN(INTEGER)));
((((ran(temps)) /\ (NATURAL))) : (FIN(NATURAL)));
((xx) : (dom(temps)));
((SET(xx).(((xx) : (dom(temps))))) : (FIN(SET(xx).(((xx) : (dom(temps)))))));
((temps) : (((dom(temps)) +-> (ran(temps)))));
not(((card(dom(temps))) = (0)))
END
&
THEORY EnumerateX
END
